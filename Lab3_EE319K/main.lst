


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: ***Your Names**update this***
    3 00000000         ; Date Created: 2/4/2017
    4 00000000         ; Last Modified: 1/17/2020
    5 00000000         ; Brief description of the program
    6 00000000         ;   The LED toggles at 2 Hz and a varying duty-cycle
    7 00000000         ; Hardware connections (External: One button and one LED
                       )
    8 00000000         ;  PE1 is Button input  (1 means pressed, 0 means not pr
                       essed)
    9 00000000         ;  PE2 is LED output (1 activates external LED on protob
                       oard)
   10 00000000         ;  PF4 is builtin button SW1 on Launchpad (Internal) 
   11 00000000         ;        Negative Logic (0 means pressed, 1 means not pr
                       essed)
   12 00000000         ; Overall functionality of this system is to operate lik
                       e this
   13 00000000         ;   1) Make PE2 an output and make PE1 and PF4 inputs.
   14 00000000         ;   2) The system starts with the the LED toggling at 2H
                       z,
   15 00000000         ;      which is 2 times per second with a duty-cycle of 
                       30%.
   16 00000000         ;      Therefore, the LED is ON for 150ms and off for 35
                       0 ms.
   17 00000000         ;   3) When the button (PE1) is pressed-and-released inc
                       rease
   18 00000000         ;      the duty cycle by 20% (modulo 100%). Therefore fo
                       r each
   19 00000000         ;      press-and-release the duty cycle changes from 30%
                        to 70% to 70%
   20 00000000         ;      to 90% to 10% to 30% so on
   21 00000000         ;   4) Implement a "breathing LED" when SW1 (PF4) on the
                        Launchpad is pressed:
   22 00000000         ;      a) Be creative and play around with what "breathi
                       ng" means.
   23 00000000         ;         An example of "breathing" is most computers po
                       wer LED in sleep mode
   24 00000000         ;         (e.g., https://www.youtube.com/watch?v=ZT6siXy
                       IjvQ).
   25 00000000         ;      b) When (PF4) is released while in breathing mode
                       , resume blinking at 2Hz.
   26 00000000         ;         The duty cycle can either match the most recen
                       t duty-
   27 00000000         ;         cycle or reset to 30%.
   28 00000000         ;      TIP: debugging the breathing LED algorithm using 
                       the real board.
   29 00000000         ; PortE device registers
   30 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   31 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   32 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   33 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C



ARM Macro Assembler    Page 2 


   34 00000000         ; PortF device registers
   35 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   36 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   37 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   38 00000000 40025510 
                       GPIO_PORTF_PUR_R
                               EQU              0x40025510
   39 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   40 00000000 40025520 
                       GPIO_PORTF_LOCK_R
                               EQU              0x40025520
   41 00000000 40025524 
                       GPIO_PORTF_CR_R
                               EQU              0x40025524
   42 00000000 4C4F434B 
                       GPIO_LOCK_KEY
                               EQU              0x4C4F434B  ; Unlocks the GPIO_
                                                            CR register
   43 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   44 00000000         
   45 00000000                 IMPORT           TExaS_Init
   46 00000000                 THUMB
   47 00000000                 AREA             DATA, ALIGN=2
   48 00000000         ;global variables go here
   49 00000000         
   50 00000000         
   51 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   52 00000000                 THUMB
   53 00000000                 EXPORT           Start
   54 00000000         
   55 00000000         Start
   56 00000000         ; TExaS_Init sets bus clock at 80 MHz
   57 00000000 F7FF FFFE       BL               TExaS_Init  ; voltmeter, scope 
                                                            on PD3
   58 00000004         ; Initialization goes here 
   59 00000004 4838            LDR              R0, =SYSCTL_RCGCGPIO_R
   60 00000006 7801            LDRB             R1, [R0]
   61 00000008 F041 0120       ORR              R1, #0x20
   62 0000000C 7001            STRB             R1, [R0]
   63 0000000E         
   64 0000000E BF00            NOP
   65 00000010 BF00            NOP
   66 00000012         
   67 00000012 4836            LDR              R0, =GPIO_PORTF_LOCK_R
   68 00000014 4936            LDR              R1, =GPIO_LOCK_KEY
   69 00000016 6001            STR              R1, [R0]
   70 00000018 4836            LDR              R0, =GPIO_PORTF_CR_R
   71 0000001A 6801            LDR              R1, [R0]



ARM Macro Assembler    Page 3 


   72 0000001C F041 01FF       ORR              R1, #0xFF
   73 00000020 6001            STR              R1, [R0]
   74 00000022         
   75 00000022 4835            LDR              R0, =GPIO_PORTF_DIR_R
   76 00000024 6801            LDR              R1, [R0]
   77 00000026 F001 01FF       AND              R1, #0xFF
   78 0000002A 6001            STR              R1, [R0]
   79 0000002C         
   80 0000002C 4833            LDR              R0, =GPIO_PORTF_DEN_R
   81 0000002E 6801            LDR              R1, [R0]
   82 00000030 F041 0110       ORR              R1, #0x10
   83 00000034 6001            STR              R1, [R0]
   84 00000036         
   85 00000036 4832            LDR              R0, =GPIO_PORTF_PUR_R
   86 00000038 6801            LDR              R1, [R0]
   87 0000003A F041 0110       ORR              R1, #0x10
   88 0000003E 6001            STR              R1, [R0]
   89 00000040         
   90 00000040 4829            LDR              R0, = SYSCTL_RCGCGPIO_R ;intial
                                                            ize port E clock
   91 00000042 6801            LDR              R1, [R0]
   92 00000044 F041 0110       ORR              R1, #0x10
   93 00000048 6001            STR              R1, [R0]
   94 0000004A BF00            NOP
   95 0000004C BF00            NOP
   96 0000004E 482D            LDR              R0, = GPIO_PORTE_DIR_R ;port E2
                                                             set to output
   97 00000050 F04F 0104       MOV              R1, #0x04
   98 00000054 6001            STR              R1, [R0]
   99 00000056 482C            LDR              R0, = GPIO_PORTE_DEN_R ;temp di
                                                            gital enable to tes
                                                            t on sim
  100 00000058 F04F 0106       MOV              R1, #0x06
  101 0000005C 6001            STR              R1, [R0]
  102 0000005E         
  103 0000005E         
  104 0000005E         
  105 0000005E         
  106 0000005E         
  107 0000005E         
  108 0000005E         
  109 0000005E B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
  110 00000060         ;these are some registers I used because I was too lazy 
                       to make variables
  111 00000060         
  112 00000060 4D2A            LDR              R5, = 3333333 ;The base length 
                                                            of a cycle 
  113 00000062 F8DF 90AC       LDR              R9, = 2999000 ;The max value we
                                                             want to let a high
                                                             run
  114 00000066 4E2B            LDR              R6, = 666666 ;amount incrementi
                                                            ng duration of high
                                                            
  115 00000068 4C2B            LDR              R4, = 1000000 ;length of high i
                                                            n the beginning
  116 0000006A         loop
  117 0000006A         ; main engine goes here



ARM Macro Assembler    Page 4 


  118 0000006A         ;FACT: (20M) cycles == 1s
  119 0000006A         
  120 0000006A 482C            LDR              R0, = GPIO_PORTE_DATA_R
  121 0000006C 6801            LDR              R1, [R0]
  122 0000006E 6802            LDR              R2, [R0]    ;sees if PE1 is tur
                                                            ned on or off 
  123 00000070 F36F 0241       BFC              R2, #1,#1
  124 00000074 428A            CMP              R2, R1
  125 00000076 D423            BMI              change      ;if CMP is negative
                                                             that means PE1 is 
                                                            turned on, so then 
                                                            branch change the c
                                                            ycle
  126 00000078         return
  127 00000078         ;LDR R0, = GPIO_PORTE_DATA_R
  128 00000078 6801            LDR              R1, [R0]
  129 0000007A F041 0104       ORR              R1, #0x04
  130 0000007E 6001            STR              R1, [R0]
  131 00000080 F36F 021E       BFC              R2, #0, #31
  132 00000084 F104 0200       ADD              R2, R4, #0
  133 00000088         Delay1
  134 00000088 F108 0800       ADD              R8, R8, #0
  135 0000008C 6801            LDR              R1, [R0]
  136 0000008E 6807            LDR              R7, [R0]    ;sees if PE1 is tur
                                                            ned on or off 
  137 00000090 F36F 0741       BFC              R7, #1,#1
  138 00000094 428F            CMP              R7, R1
  139 00000096 D413            BMI              change
  140 00000098 1E52            SUBS             R2, R2, #1
  141 0000009A D1F5            BNE              Delay1
  142 0000009C         
  143 0000009C         
  144 0000009C 6801            LDR              R1, [R0]
  145 0000009E F36F 0183       BFC              R1, #2, #2
  146 000000A2 6001            STR              R1, [R0]
  147 000000A4 F36F 031E       BFC              R3, #0, #31
  148 000000A8 1B2B            SUBS             R3, R5, R4
  149 000000AA         Delay2
  150 000000AA F108 0800       ADD              R8, R8, #0
  151 000000AE 6801            LDR              R1, [R0]
  152 000000B0 6807            LDR              R7, [R0]    ;sees if PE1 is tur
                                                            ned on or off 
  153 000000B2 F36F 0741       BFC              R7, #1,#1
  154 000000B6 428F            CMP              R7, R1
  155 000000B8 D402            BMI              change
  156 000000BA 1E5B            SUBS             R3, R3, #1
  157 000000BC D1F5            BNE              Delay2
  158 000000BE         
  159 000000BE E7D4            B                loop
  160 000000C0         
  161 000000C0         
  162 000000C0         change
  163 000000C0 454C            CMP              R4, R9      ;check if R4 is alr
                                                            eady at 3M
  164 000000C2 D508            BPL              Zero
  165 000000C4 4434            ADD              R4, R4, R6  ;R4+=2M
  166 000000C6         
  167 000000C6         loop2                                ;sits here till PE1
                                                             turned off



ARM Macro Assembler    Page 5 


  168 000000C6 4815            LDR              R0, = GPIO_PORTE_DATA_R
  169 000000C8 6801            LDR              R1, [R0]
  170 000000CA 6802            LDR              R2, [R0]    ;sees if PE1 is tur
                                                            ned on or off 
  171 000000CC F36F 0241       BFC              R2, #1,#1
  172 000000D0 428A            CMP              R2, R1
  173 000000D2 D4F8            BMI              loop2       ;if CMP is negative
                                                             that means PE1 is 
                                                            turned on, so then 
                                                            branch change the c
                                                            ycle
  174 000000D4 E7D0            B                return
  175 000000D6         
  176 000000D6         Zero
  177 000000D6 4C10            LDR              R4, =1000000 ;3M
  178 000000D8         ;B return
  179 000000D8         
  180 000000D8         loop3                                ;its here till PE1 
                                                            turned off
  181 000000D8 4810            LDR              R0, = GPIO_PORTE_DATA_R
  182 000000DA 6801            LDR              R1, [R0]
  183 000000DC 6802            LDR              R2, [R0]    ;sees if PE1 is tur
                                                            ned on or off 
  184 000000DE F36F 0241       BFC              R2, #1,#1
  185 000000E2 428A            CMP              R2, R1
  186 000000E4 D4F8            BMI              loop3       ;if CMP is negative
                                                             that means PE1 is 
                                                            turned on, so then 
                                                            branch change the c
                                                            ycle
  187 000000E6         
  188 000000E6         
  189 000000E6 E7C7            B                return
  190 000000E8         
  191 000000E8         
  192 000000E8                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  193 000000E8                 END                          ; end of file
              400FE608 
              40025520 
              4C4F434B 
              40025524 
              40025400 
              4002551C 
              40025510 
              40024400 
              4002451C 
              0032DCD5 
              002DC2D8 
              000A2C2A 
              000F4240 
              400243FC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\main.d -o.\main.o -I.\RTE\_Lab3 -IC:\Users\mervi\AppData\Local\A
rm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include -IC:\Users\mervi\AppData\Local\Arm\
Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C123 --predefine="__EVAL SETA 1" --
predefine="__UVISION_VERSION SETA 529" --predefine="_RTE_ SETA 1" --predefine="
TM4C123GH6PM SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 47 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 51 in file main.s
   Uses
      None
Comment: .text unused
Delay1 00000088

Symbol: Delay1
   Definitions
      At line 133 in file main.s
   Uses
      At line 141 in file main.s
Comment: Delay1 used once
Delay2 000000AA

Symbol: Delay2
   Definitions
      At line 149 in file main.s
   Uses
      At line 157 in file main.s
Comment: Delay2 used once
Start 00000000

Symbol: Start
   Definitions
      At line 55 in file main.s
   Uses
      At line 53 in file main.s
Comment: Start used once
Zero 000000D6

Symbol: Zero
   Definitions
      At line 176 in file main.s
   Uses
      At line 164 in file main.s
Comment: Zero used once
change 000000C0

Symbol: change
   Definitions
      At line 162 in file main.s
   Uses
      At line 125 in file main.s
      At line 139 in file main.s
      At line 155 in file main.s

loop 0000006A

Symbol: loop
   Definitions
      At line 116 in file main.s
   Uses
      At line 159 in file main.s
Comment: loop used once
loop2 000000C6



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: loop2
   Definitions
      At line 167 in file main.s
   Uses
      At line 173 in file main.s
Comment: loop2 used once
loop3 000000D8

Symbol: loop3
   Definitions
      At line 180 in file main.s
   Uses
      At line 186 in file main.s
Comment: loop3 used once
return 00000078

Symbol: return
   Definitions
      At line 126 in file main.s
   Uses
      At line 174 in file main.s
      At line 189 in file main.s

10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_LOCK_KEY 4C4F434B

Symbol: GPIO_LOCK_KEY
   Definitions
      At line 42 in file main.s
   Uses
      At line 68 in file main.s
Comment: GPIO_LOCK_KEY used once
GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 32 in file main.s
   Uses
      None
Comment: GPIO_PORTE_AFSEL_R unused
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 30 in file main.s
   Uses
      At line 120 in file main.s
      At line 168 in file main.s
      At line 181 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 99 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 96 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 37 in file main.s
   Uses
      None
Comment: GPIO_PORTF_AFSEL_R unused
GPIO_PORTF_CR_R 40025524

Symbol: GPIO_PORTF_CR_R
   Definitions
      At line 41 in file main.s
   Uses
      At line 70 in file main.s
Comment: GPIO_PORTF_CR_R used once
GPIO_PORTF_DATA_R 400253FC



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 35 in file main.s
   Uses
      None
Comment: GPIO_PORTF_DATA_R unused
GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 80 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 75 in file main.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_LOCK_R 40025520

Symbol: GPIO_PORTF_LOCK_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 67 in file main.s
Comment: GPIO_PORTF_LOCK_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 85 in file main.s
Comment: GPIO_PORTF_PUR_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 43 in file main.s
   Uses
      At line 59 in file main.s
      At line 90 in file main.s

13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 45 in file main.s
   Uses
      At line 57 in file main.s
Comment: TExaS_Init used once
1 symbol
361 symbols in table
